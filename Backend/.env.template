# ========================================
# STOCKLY BACKEND - CONFIGURACIÓN
# ========================================
# IMPORTANTE: NO subas este archivo a Git
# Crea tu propio .env basado en este ejemplo

# ========================================
# 1. SUPABASE (Base de Datos PostgreSQL)
# ========================================
# Cómo obtener DATABASE_URL:
# 1. Ve a https://supabase.com/dashboard/project/[tu-project]/settings/database
# 2. Busca "Connection String" 
# 3. Selecciona modo "URI"
# 4. Copia la URL completa y reemplaza [YOUR-PASSWORD] con tu contraseña real
#
# IMPORTANTE: Usa el puerto 6543 (Connection Pooling) para mejor rendimiento
# Formato: postgresql://postgres.[PROJECT-REF]:[PASSWORD]@aws-0-[REGION].pooler.supabase.com:6543/postgres

DATABASE_URL=postgresql://postgres.xyzabc123:tu-password-aqui@aws-0-us-east-1.pooler.supabase.com:6543/postgres

# ========================================
# 2. JWT (Autenticación)
# ========================================
# Genera secretos seguros con: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
# O usa: https://generate-secret.vercel.app/32

JWT_SECRET=genera-un-secreto-aleatorio-de-minimo-32-caracteres-aqui
JWT_REFRESH_SECRET=genera-otro-secreto-diferente-para-refresh-tokens
JWT_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d

# ========================================
# 3. CLOUDINARY (Almacenamiento de Imágenes)
# ========================================
# Cómo obtener credenciales:
# 1. Crea cuenta gratuita en https://cloudinary.com/users/register/free
# 2. Ve al Dashboard: https://console.cloudinary.com/
# 3. Copia los valores de "Account Details"

CLOUDINARY_CLOUD_NAME=tu-cloud-name
CLOUDINARY_API_KEY=123456789012345
CLOUDINARY_API_SECRET=AbCdEfGhIjKlMnOpQrStUvWxYz

# ========================================
# 4. SERVIDOR
# ========================================
PORT=3001
NODE_ENV=development

# ========================================
# 5. OCR (Tesseract - Opcional)
# ========================================
# Idiomas para reconocimiento de texto
# eng = inglés, spa = español
TESSEACT_LANG=eng+spa

# ========================================
# 6. SEGURIDAD
# ========================================
# Bcrypt salt rounds (10-12 recomendado)
BCRYPT_SALT_ROUNDS=12

# CORS - Orígenes permitidos (separados por coma)
# Ajusta según la URL de tu frontend
CORS_ORIGIN=http://localhost:3000,http://localhost:5173

# ========================================
# 7. RATE LIMITING (Protección anti-spam)
# ========================================
# Ventana de tiempo en milisegundos (900000 = 15 minutos)
RATE_LIMIT_WINDOW_MS=900000
# Máximo de requests por ventana
RATE_LIMIT_MAX_REQUESTS=100

# ========================================
# 8. LOGGING
# ========================================
# Nivel de logs: error, warn, info, debug
LOG_LEVEL=info

# ========================================
# NOTAS IMPORTANTES:
# ========================================
# - Asegúrate de que .env esté en .gitignore
# - Usa valores diferentes en desarrollo y producción
# - Para Railway, configura estas variables en el dashboard
# - Nunca compartas tus credenciales
